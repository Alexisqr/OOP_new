// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShelterEF.DAL.Data;

#nullable disable

namespace ShelterEF.DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShelterDAL.Models.ComentKindAnimals", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDKindAnimals")
                        .HasColumnType("int");

                    b.Property<int>("IDVolonter")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("IDKindAnimals");

                    b.HasIndex("IDVolonter");

                    b.ToTable("ComentKindAnimalss");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.ComentGlob", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDVolonter")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("IDVolonter");

                    b.ToTable("ComentGlobs");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.ComentGood", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDGood")
                        .HasColumnType("int");

                    b.Property<int>("IDVolonter")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("IDGood");

                    b.HasIndex("IDVolonter");

                    b.ToTable("ComentGoods");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.Goods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NameKind")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.KindOfAnimals", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameKind")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("KindOfAnimals");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.Volonters", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Volonters");
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentKindAnimals", b =>
                {
                    b.HasOne("ShelterEF.DAL.Entities.KindOfAnimals", "KindOfAnimals")
                        .WithMany("ComentKindAnimalss")
                        .HasForeignKey("IDKindAnimals")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShelterEF.DAL.Entities.Volonters", "Volonters")
                        .WithMany("ComentKindAnimalss")
                        .HasForeignKey("IDVolonter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KindOfAnimals");

                    b.Navigation("Volonters");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.ComentGlob", b =>
                {
                    b.HasOne("ShelterEF.DAL.Entities.Volonters", "Volonters")
                        .WithMany("ComentGlobs")
                        .HasForeignKey("IDVolonter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volonters");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.ComentGood", b =>
                {
                    b.HasOne("ShelterEF.DAL.Entities.Goods", "Goods")
                        .WithMany("ComentGoods")
                        .HasForeignKey("IDGood")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShelterEF.DAL.Entities.Volonters", "Volonters")
                        .WithMany("ComentGoods")
                        .HasForeignKey("IDVolonter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("Volonters");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.Goods", b =>
                {
                    b.Navigation("ComentGoods");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.KindOfAnimals", b =>
                {
                    b.Navigation("ComentKindAnimalss");
                });

            modelBuilder.Entity("ShelterEF.DAL.Entities.Volonters", b =>
                {
                    b.Navigation("ComentGlobs");

                    b.Navigation("ComentGoods");

                    b.Navigation("ComentKindAnimalss");
                });
#pragma warning restore 612, 618
        }
    }
}
